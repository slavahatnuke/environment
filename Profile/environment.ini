[php installed]
command=php
@class=Hat\Environment\Tester\CommandExists

[php version]
command=php -v
version=5.3.10
@class=Hat\Environment\Tester\CommandVersion
@doc=doc/php.txt
@description="php version is %%VERSION%% or great"


[php version exclude]
command=php -v
version=5.3.16
@class=Hat\Environment\Tester\CommandVersionExclude
@doc=doc/php.txt
@description="php version must not be %%VERSION%% as Symfony 2 will not work properly with it"

[nodejs installed]
command=node
@class=Hat\Environment\Tester\CommandExists
@description=node must be installed
@builder=builder/node.ini

[nodejs version]
command=node -v
version=0.8.16
@class=Hat\Environment\Tester\CommandVersion

[mysql installed]
command=mysql
@class=Hat\Environment\Tester\CommandExists

[mysql version]
command=mysql --version
version=5.5
@class=Hat\Environment\Tester\CommandVersion

[beanstalk installed]
command=beanstalkd
@class=Hat\Environment\Tester\CommandExists

[beanstalk version]
command=beanstalkd -v
version=1.8
regex="/(\d+\.\d+)/"
@class=Hat\Environment\Tester\CommandVersion

[phpunit installed]
command=phpunit
@class=Hat\Environment\Tester\CommandExists
@doc=doc/phpunit.txt

[phpunit version]
command=phpunit --version
version=3.7.10
@class=Hat\Environment\Tester\CommandVersion
@doc=doc/phpunit.txt

[less installed]
command=less
@class=Hat\Environment\Tester\CommandExists

[less version]
command=less -V
version=418
regex="/(\d+)/"
@class=Hat\Environment\Tester\CommandVersion

[beanstalk is working]
process=beanstalkd
@class=Hat\Environment\Tester\Process

[mysql is working]
process=mysqld
@class=Hat\Environment\Tester\Process

[mongodb is working]
process=mongod
@class=Hat\Environment\Tester\Process

[apache is working]
process=apache2
@class=Hat\Environment\Tester\Process

[apache is working on port]
port=80
ip=127.0.0.1
@class=Hat\Environment\Tester\Socket

[apache answer on request]
port=80
ip=127.0.0.1
request="GET / HTTP/1.1\r\nHost: localhost\r\nConnection: Close\r\n\r\n"
response=apache
@class=Hat\Environment\Tester\Socket

[PDO extension]
class=PDO
@class=Hat\Environment\Tester\PhpClassExists

[MB extension]
function=mb_strlen
@class=Hat\Environment\Tester\PhpFunctionExists

[current dir is writable]
path=.
@class=Hat\Environment\Tester\IsWritable

[short_open_tag is empty]
option=short_open_tag
expected=
@class=Hat\Environment\Tester\PhpIni

[date.timezone is not empty]
option=date.timezone
regex=/.+/i
@class=Hat\Environment\Tester\PhpIni

[os.ini contains os name darwin]
file=Profile/os.ini
contains="darwin"
@class=Hat\Environment\Tester\FileContains

[os.ini contains os name darwin with regex]
file=Profile/os.ini
regex=/darwin/i
@class=Hat\Environment\Tester\FileContains
